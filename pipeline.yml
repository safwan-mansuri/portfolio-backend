AWSTemplateFormatVersion: "2010-09-09"
Description: Deployment pipeline for AIS Tenant Managament Service
Parameters:
  GithubRepoOwner:
    Type: String
    Default: safwan-mansuri
  GithubRepoName:
    Type: String
    Default: portfolio-backend
  GithubRepoBranch:
    Type: String
    Default: master

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Source Code Repository
        Parameters:
          - GithubRepoName
          - GithubRepoBranch

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Suspended
      AccessControl: BucketOwnerFullControl

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      Name: !Ref AWS::StackName
      ArtifactStore:
        Location:
          Ref:
            ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GithubRepoOwner
                Repo: !Ref GithubRepoName
                Branch: !Ref GithubRepoBranch
                OAuthToken: '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'
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Deploy
          Actions:
          - Name: DeployBackend
            ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
            InputArtifacts:
              - Name: SourceOutput
            OutputArtifacts:
              - Name: DeployBackendOutput
            Configuration:
                ProjectName: !Ref DeployBackendBuild
            RunOrder: 1
  
  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration:
        SecretToken: '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'
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      Name: !Ref AWS::StackName
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess


  DeployBackendBuild:
      Type: AWS::CodeBuild::Project
      Properties:
        Artifacts:
          Type: CODEPIPELINE
        Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:4.0
          Type: LINUX_CONTAINER
          EnvironmentVariables:
            - Name: SLS_DEBUG
              Value: 'true'
            - Name: NODE_ENV
              Value: production
            - Name: ACCOUNT_ID
              Value: !Ref "AWS::AccountId"
            - Name: GIT_REPO
              Value: !Ref GithubRepoName
            - Name: GIT_BRANCH
              Value: !Ref GithubRepoBranch
            - Name: GIT_TOKEN
              Value: "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"
        Name: !Sub ${AWS::StackName}
        ServiceRole: !Ref DeployBackendBuildRole
        Source:
          Type: CODEPIPELINE
          BuildSpec: |
            version: 0.2
            phases:
              install:
                commands:
                  - yarn install
              build:
                commands:
                  - echo "build succeeded"
  DeployBackendBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - logs:*
                  - events:*
                  - apigateway:*
                  - cloudwatch:*
                  - lambda:*
                  - route53:ListHostedZones
                  - route53:ChangeResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                  - cloudfront:UpdateDistribution
                  - acm:ListCertificates
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:GetBucketVersioning
                  - s3:PutBucketVersioning
                  - s3:GetBucketLocation
                  - s3:PutLifecycleConfiguration
                  - s3:PutBucketCORS
                  - s3:PutBucketNotification
                  - s3:DeleteBucketNotification
                  - s3:SetBucketEncryption
                  - s3:DeleteBucketEncryption
                  - s3:GetEncryptionConfiguration
                  - s3:PutEncryptionConfiguration
                  - cloudformation:CreateStack
                  - cloudformation:CreateUploadBucket
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:ValidateTemplate
                  - cloudformation:ListStackResources
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:DetachRolePolicy
                  - iam:AttachRolePolicy
                  - ec2:DescribeAccountAttributes
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DetachNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - sqs:CreateQueue
                  - sqs:GetQueueAttributes
                  - sqs:DeleteQueue
                  - sqs:SetQueueAttributes
                  - sns:*
                  - servicediscovery:*
                  - secretsmanager:GetSecretValue
                  - ssm:GetParameter
                Resource: "*"